<p id="notice"><%= notice %></p>

<!-- <script src="//maps.google.com/maps/api/js?key=AIzaSyAKwfmJYw4SwTVSGrKeHQj2UTPtbei2TLM"></script> -->
<script src="//cdn.rawgit.com/mahnunchik/markerclustererplus/master/dist/markerclusterer.min.js"></script>
<script src='//cdn.rawgit.com/printercu/google-maps-utility-library-v3-read-only/master/infobox/src/infobox_packed.js' type='text/javascript'></script> <!-- only if you need custom infoboxes -->

<style>
   #map {
    height: 400px;
    width: 100%;
   }
</style>

<h1>Lead Drops - <%=@lead_drops.count%></h1>
<div id="map"></div>
<script>

      function initMap() {

        var map = new google.maps.Map(document.getElementById('map'), {
          zoom: 3,
          center: {lat: -28.024, lng: 140.887}
        });

        // Create an array of alphabetical characters used to label the markers.
        var labels = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';

        // Add some markers to the map.
        // Note: The code uses the JavaScript Array.prototype.map() method to
        // create an array of markers based on a given "locations" array.
        // The map() method here has nothing to do with the Google Maps API.
        var markers = locations.map(function(location, i) {
          return new google.maps.Marker({
            position: location,
            label: labels[i % labels.length]
          });
        });

        // Add a marker clusterer to manage the markers.
        var markerCluster = new MarkerClusterer(map, markers,
            {imagePath: 'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m'});
      }
      var locations = [
        {lat: 42.3376214, lng: -83.4759617}
      ]
    </script>
    <script src="https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/markerclusterer.js">
    </script>

<script async defer
src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBwUU6uLtSyG-D1D2GaRwyEDC0uF8xoBHE&callback=initMap">
</script>

<table>
  <thead>
    <tr>
      <th>Da</th>
      <th>Create date</th>
      <th>Existing ipdsl</th>
      <th>Max speed</th>
      <th>Contact name</th>
      <th>Street line 1</th>
      <th>Unit number</th>
      <th>Living unit</th>
      <th>Lead record type</th>
      <th>Dsl service type</th>
      <th>Wireless customer</th>
      <th>Existing hsia</th>
      <th>Existing voip</th>
      <th>Disposition</th>
      <th>Wire center</th>
      <th>House nbr</th>
      <th>Street name</th>
      <th>Street direction</th>
      <th>Suffix type code</th>
      <th>City</th>
      <th>State/province</th>
      <th>Zip/postal code</th>
      <th colspan="3"></th>
    </tr>
  </thead>

  <tbody>
    <% @lead_drops.each do |lead_drop| %>
      <tr>
        <td><%= lead_drop.da %></td>
        <td><%= lead_drop.create_date %></td>
        <td><%= lead_drop.existing_ipdsl %></td>
        <td><%= lead_drop.max_speed %></td>
        <td><%= lead_drop.contact_name %></td>
        <td><%= lead_drop.street_line_1 %></td>
        <td><%= lead_drop.unit_number %></td>
        <td><%= lead_drop.living_unit_id %></td>
        <td><%= lead_drop.lead_record_type %></td>
        <td><%= lead_drop.dsl_service_type %></td>
        <td><%= lead_drop.wireless_customer %></td>
        <td><%= lead_drop.existing_hsia %></td>
        <td><%= lead_drop.existing_voip %></td>
        <td><%= lead_drop.disposition %></td>
        <td><%= lead_drop.wire_center %></td>
        <td><%= lead_drop.house_nbr %></td>
        <td><%= lead_drop.street_name %></td>
        <td><%= lead_drop.street_direction %></td>
        <td><%= lead_drop.suffix_type_code %></td>
        <td><%= lead_drop.city %></td>
        <td><%= lead_drop.state_province %></td>
        <td><%= lead_drop.zip_postal_code %></td>
        <td><%= link_to 'Show', lead_drop %></td>
        <td><%= link_to 'Edit', edit_lead_drop_path(lead_drop) %></td>
        <td><%= link_to 'Destroy', lead_drop, method: :delete, data: { confirm: 'Are you sure?' } %></td>
      </tr>
    <% end %>
  </tbody>
</table>

<br>
<h4>Import that data!</h4>
  <%= form_tag import_lead_drops_path, multipart: true do%>
    <%= file_field_tag :file %>
    <%= submit_tag "Import CSV" %>
  <% end %>
<br>
<%= link_to 'New Lead Drop', new_lead_drop_path %>
